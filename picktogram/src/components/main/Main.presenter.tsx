import React from "react"
import Head from 'next/head'
import Card from '@/src/components/commons/card/card'
import Header from '@/src/components/main/components/header'
import UserMainProfile from "./components/userMainProfile"
import UserRecommend from "./components/userRecommend"
import { FetchNextPageOptions, InfiniteQueryObserverResult } from "react-query"
import { BoardData } from "./Main.type"
import NoReplyBoard from "./components/noReplyBoard"

export default function MainUI({
    user,
    data,
    fetchNextPage
}: {
    user : {
        nickname : string
        token : string
    },
    data : any;
    fetchNextPage : (options?: FetchNextPageOptions | undefined) => Promise<InfiniteQueryObserverResult<any, unknown>>
}) {
  return (
    <>
      <Head>
        <title>picktogram</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header user={user}/>
      <div style={{ position : 'relative', backgroundColor : "#d9d9d9" , paddingTop : "20px", display : "grid", gridTemplateColumns : "1fr 1fr 1fr", gap : "20px"}}>

        <div>
          {/* 달력 */}
          달력
        </div>

        <div>
          <UserMainProfile user={user} />
          {data?.pages.map((page : {list : BoardData[]}, index : number) => (
            <React.Fragment key={index}>
              {page.list.map((post , index) => (
                <Card key={post.id} isLast={index === page.list.length -1} newLimit={() => fetchNextPage()} data={post}/>
              ))}
            </React.Fragment>
          ))}
        </div>

        <div style={{position : "relative"}}>
          {/*  */}
          <div style={{
              position : "fixed",
              width : "100%",
              display : "flex",
              flexDirection : 'column',
              rowGap : '1rem',
              overflowY : "scroll",
              }}>
            <NoReplyBoard user={user} />
            <UserRecommend user={user} />
          </div>
        </div>

      </div>

    </>
  )
}
