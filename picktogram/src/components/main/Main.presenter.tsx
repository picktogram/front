import React from "react"
import Head from 'next/head'
import Card from '@/src/components/commons/card/card'
import Header from '@/src/components/commons/header'
import { FetchNextPageOptions, InfiniteQueryObserverResult } from "react-query"
import { BoardData } from "./Main.type"
import {useRouter} from 'next/router'

export default function MainUI({
    user,
    data,
    handlePos,
    fetchNextPage
}: {
    user : {
        nickname : string
    },
    data : any;
    handlePos : React.MouseEventHandler<HTMLButtonElement>
    fetchNextPage : (options?: FetchNextPageOptions | undefined) => Promise<InfiniteQueryObserverResult<any, unknown>>
}) {
  const router = useRouter()
  return (
    <>
      <Head>
        <title>picktogram</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header user={user}/>
      <button onClick={() => router.push("/") } style={{position : "fixed", top : '100px'}}>Home</button>
      <button onClick={handlePos} style={{position : "fixed", top : '200px'}}>현재 포지션을 저장하는 임시 버튼</button>
      <div style={{ margin : "0 auto", padding : "16px 20px", display : "grid", gridTemplateColumns : "650px", justifyContent : "center" , gap : '2rem'}}>
        {data?.pages.map((page : {list : BoardData[]}, index : number) => (
          <React.Fragment key={index}>
            {page.list.map((post , index) => (
              <Card key={post.id} isLast={index === page.list.length -1} newLimit={() => fetchNextPage()} data={post}/>
            ))}
          </React.Fragment>
        ))}
      </div>
    </>
  )
}
